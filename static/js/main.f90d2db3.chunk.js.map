{"version":3,"sources":["Components/Search/Search.js","App.js","reportWebVitals.js","index.js"],"names":["Search","props","state","searchQuery","tags","Unsplash","accessKey","search","photos","this","then","toJson","json","array","Set","i","results","length","description","includes","add","alt_description","j","title","setState","e","collectTags","onChange","filterTags","target","value","slice","map","index","className","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAEaA,EAAb,kDACE,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,YAAa,GACbC,KAAM,IAJS,EADrB,0DAQiB,IAAD,OACK,IAAIC,IAAS,CAC5BC,UAAW,gDAEJC,OACNC,OAAOC,KAAKP,MAAMC,YAAa,EAAG,IAClCO,KAAKC,UACLD,MAAK,SAACE,GAEL,IADA,IAAIC,EAAQ,IAAIC,IACPC,EAAI,EAAGA,EAAIH,EAAKI,QAAQC,OAAQF,IAAK,CAAC,IAAD,KAC5C,UAAKH,EAAKI,QAAQD,GAAGG,mBAArB,aAAK,EAA6BC,SAAS,EAAKjB,MAAMC,eACtDU,EAAMO,IAAIR,EAAKI,QAAQD,GAAGG,cAE1B,UAAIN,EAAKI,QAAQD,GAAGM,uBAApB,aAAI,EAAiCF,SAAS,EAAKjB,MAAMC,eACzDU,EAAMO,IAAIR,EAAKI,QAAQD,GAAGM,iBAE1B,IAAK,IAAIC,EAAI,EAAGA,EAAIV,EAAKI,QAAQD,GAAGX,KAAKa,OAAQK,IAC5CV,EAAKI,QAAQD,GAAGX,KAAKkB,GAAGC,MAAMJ,SAAS,EAAKjB,MAAMC,cACrDU,EAAMO,IAAIR,EAAKI,QAAQD,GAAGX,KAAKkB,GAAGC,OAGtC,EAAKC,SAAS,CACZpB,KAAK,YAAKS,UA9BpB,iCAkCaY,GAAI,IAAD,OACZhB,KAAKe,SACH,CACErB,YAAasB,IAEf,WACM,EAAKvB,MAAMC,YAAYc,QAAU,GACnC,EAAKS,mBAzCf,+BA8CY,IAAD,OACP,OACE,oCACE,uBAAOC,SAAU,SAACF,GAAD,OAAO,EAAKG,WAAWH,EAAEI,OAAOC,UACjD,6BACCrB,KAAKP,MAAME,KAAK2B,MAAM,EAAG,GAAGC,KAAI,SAACF,EAAOG,GACzC,OAAO,oBAAgBC,UAAU,0BAA1B,SAAqDJ,GAA5CG,eApDxB,GAA4BE,aCIbC,MAJf,WACE,OAAO,qBAAKF,UAAU,MAAf,SAAqB,cAAC,EAAD,OCSfG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f90d2db3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Unsplash, { toJson } from \"unsplash-js\";\r\nexport class Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchQuery: \"\",\r\n      tags: []\r\n    };\r\n  }\r\n  collectTags() {\r\n    const unsplash = new Unsplash({\r\n      accessKey: \"mwcZJW1qYyORxKFdUfn5Hn12UO1aDqVip2Yrj2S4TJk\",\r\n    });\r\n    unsplash.search\r\n      .photos(this.state.searchQuery, 1, 30)\r\n      .then(toJson)\r\n      .then((json) => {\r\n        let array = new Set();\r\n        for (let i = 0; i < json.results.length; i++) {\r\n          if(  json.results[i].description?.includes(this.state.searchQuery))\r\n          array.add(json.results[i].description);\r\n  \r\n          if( json.results[i].alt_description?.includes(this.state.searchQuery))\r\n          array.add(json.results[i].alt_description);\r\n\r\n          for (let j = 0; j < json.results[i].tags.length; j++) {\r\n            if(json.results[i].tags[j].title.includes(this.state.searchQuery))\r\n            array.add(json.results[i].tags[j].title);\r\n          }\r\n        }\r\n        this.setState({\r\n          tags: [...array],\r\n        });\r\n      });\r\n  }\r\n  filterTags(e) {\r\n    this.setState(\r\n      {\r\n        searchQuery: e,\r\n      },\r\n      () => {\r\n        if (this.state.searchQuery.length >= 3) {\r\n          this.collectTags();\r\n        }\r\n      }\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <section>\r\n        <input onChange={(e) => this.filterTags(e.target.value)} />\r\n        <ul>\r\n        {this.state.tags.slice(0, 5).map((value, index) => {\r\n        return <li key={index} className=\"search__suggest__option\">{value}</li>\r\n      })}\r\n\r\n        </ul>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import \"./App.css\";\nimport {Search} from \"./Components/Search/Search\"\nfunction App() {\n  return <div className=\"App\"><Search/></div>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}